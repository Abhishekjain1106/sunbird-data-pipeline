---
# file: configure.yml
- name: Create druid deploy directory
  file: path=/data state=directory mode=0777
        owner={{ ansible_user }}
  become: yes

- name: Create druid deploy directory
  file: path=/var/tmp state=directory mode=0777
        owner={{ ansible_user }}
  become: yes

- name: Create druid logging directory
  file: path=/var/log/druid/ state=directory mode=0777
        owner={{ ansible_user }}
  become: yes

- name: Create tmp dir only for historical nodes
  file: path=/mnt/tmp state=directory mode=0755
        owner={{ ansible_user }}
  become: yes
  when: druid_role == "historical" or druid_role == "middleManager"

- name: Create tmp dir only for historical nodes
  file: path=/mnt/persistent state=directory mode=0755
        owner={{ ansible_user }}
  become: yes
  when: druid_role == "historical"

- name: Create tmp dir only for historical nodes
  file: path=/mnt/persistent/zk_druid state=directory mode=0755
        owner={{ ansible_user }}
  become: yes
  when: druid_role == "historical"

- name: Create tmp dir only for middleManager nodes
  file: path=/mnt/druid/ state=directory mode=0755
        owner={{ ansible_user }}
  become: yes
  when: druid_role == "middleManager"

- name: Create tmp dir only for middleManager nodes
  file: path=/mnt/druid/hadoop-tmp state=directory mode=0755
        owner={{ ansible_user }}
  become: yes
  when: druid_role == "middleManager"

- name: Create tmp dir only for middleManager nodes
  file: path=/mnt/druid/task state=directory mode=0755
        owner={{ ansible_user }}
  become: yes
  when: druid_role == "middleManager"

- name: Create tmp dir only for middleManager nodes
  file: path=/mnt/druid/segment_cache state=directory mode=0755
        owner={{ ansible_user }}
  become: yes
  when: druid_role == "middleManager"

- name: Download Druid version {{ druid_version }}
  get_url: url=http://mirrors.estointernet.in/apache/incubator/druid/0.13.0-incubating/apache-druid-0.13.0-incubating-bin.tar.gz
           dest=/data
           mode=0777
           force=no

- name: Un-tar druid download
  unarchive: src=/data/apache-druid-{{ druid_version }}-bin.tar.gz dest=/data/ copy=no
  become: yes

- name: Change ownership of download path
  file: path=/data owner={{ ansible_user }} recurse=yes mode=0777
  become: yes

- name: Execute command for emitter extensions
  shell: /usr/bin/java -classpath "lib/*" -Ddruid.extensions.directory="{{ druid_path }}extensions" org.apache.druid.cli.Main tools pull-deps --no-default-hadoop -c "org.apache.druid.extensions.contrib:druid-azure-extensions:{{ druid_version }}"
  args: 
    chdir: /data/apache-druid-0.13.0-incubating
    executable: /bin/bash

# Druid configurations:
- name: Copy common.properties for Druid node {{ druid_role }}
  template: src=_common/common.runtime.properties dest={{ druid_path }}conf/druid/_common/
        owner={{ ansible_user }} mode=0755
  become: yes

- name: Copy common.properties for Druid node {{ druid_role }}
  template: src=_common/log4j2.xml dest={{ druid_path }}conf/druid/_common/
        owner={{ ansible_user }} mode=0755
  become: yes

- name: Copy over specific configuration for Druid node {{ druid_role }}
  template: src={{ druid_role }}/runtime.properties dest={{ druid_path }}conf/druid/{{ druid_role }}
        owner={{ ansible_user }} mode=0755
  become: yes

- name: Copy over jvm configuration for Druid node {{ druid_role }}
  template: src={{ druid_role }}/jvm.config dest={{ druid_path }}conf/druid/{{ druid_role }}
        owner={{ ansible_user }} mode=0755
  become: yes

