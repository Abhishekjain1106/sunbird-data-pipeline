## Data products deployment ##
- name: Copy Data Products
  copy: src={{ analytics_batch_module_artifact }} dest={{ analytics.home }}/models_v2
  tags:
    - dataproducts

- name: Copy Framework Library
  copy: src={{ analytics_core_artifact }} dest={{ analytics.home }}/models_v2
  tags:
    - framework

- name: Copy Job Manager
  copy: src={{ analytics_job_manager_artifact }} dest={{ analytics.home }}/models_v2
  tags:
    - dataproducts

- name: Unarchive Job Manager
  unarchive: src={{ analytics.home }}/{{ analytics_job_manager_artifact }} dest={{ analytics.home }} copy=no group={{ analytics_group }} owner={{ analytics_user }} creates={{ analytics.home }}/script
  tags:
    - dataproducts

- name: Copy configuration file
  template: src=common.conf.j2 dest={{ analytics.home }}/models_v2/{{ env }}.conf mode=755 owner={{ analytics_user }} group={{ analytics_group }}
  tags:
    - dataproducts
    - framework


- name: Copy log4j2 xml file
  template: src=log4j2.xml.j2 dest={{ analytics.home }}/models_v2/log4j2.xml mode=755 owner={{ analytics_user }} group={{ analytics_group }}
  tags: [ dataproducts, framework ]

- name: Copy Scripts
  template: src={{ item }}.j2 dest={{ analytics.home }}/scripts/{{ item }}.sh mode=755 owner={{ analytics_user }} group={{ analytics_group }}
  with_items: "{{ analytics.scripts }}"
  tags: [ dataproducts, framework ]

- name: Update model config
  template: src=model-config.j2 dest={{ analytics.home }}/scripts/model-config.sh mode=755 owner={{ analytics_user }} group={{ analytics_group }}
  tags:
    - update-config

- name: Copy submit-all-jobs ruby file
  template: src=submit-all-jobs.rb.j2 dest={{ analytics.home }}/scripts/submit-all-jobs.rb mode=755 owner={{ analytics_user }} group={{ analytics_group }}
  tags:
    - update-config

- name: Copy model-config.json file
  template: src=model-config.json.j2 dest={{ analytics.home }}/scripts/model-config.json mode=755 owner={{ analytics_user }} group={{ analytics_group }}
  tags:
    - update-config

- name: Clean cron jobs
  command: crontab -r
  ignore_errors: yes
  tags:
    - clean-cronjobs

- name: Create daily cron jobs using submit-all-jobs
  cron: name="{{env}}-{{ item.key }}" minute={{ item.value.minute }} hour={{ item.value.hour }}  job='/bin/bash -lc "ruby {{ analytics.home }}/scripts/submit-all-jobs.rb"'
  with_dict: "{{ submit_jobs }}"
  tags:
    - cronjobs

- name: Create start-jobmanager cron jobs
  cron: name="{{env}}-{{ item.key }}" minute={{ item.value.minute }} hour={{ item.value.hour }}  job="{{ analytics.home }}/scripts/start-jobmanager.sh"
  with_dict: "{{ start_jobmanager }}"
  tags:
    - cronjobs

- name: Create video-streaming cron job
  cron: name="{{env}}-video-streaming" minute=*/{{ video_stream_job_schedule }} job="{{ analytics.home }}/scripts/run-job.sh video-streaming"
  tags:
    - cronjobs

- name: Update start jobmanager
  template: src=start-jobmanager.j2 dest={{ analytics.home }}/scripts/start-jobmanager.sh mode=755 owner={{ analytics_user }} group={{ analytics_group }}
  tags:
    - update-jobmanager-config
