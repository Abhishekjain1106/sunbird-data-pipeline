#!/bin/bash

cluster_name="{{env}}-spark-cluster"
resource_group="{{azure_resource_group}}"
cluster_type=spark
component_version=2.4
headnode_size="{{headnode_size}}"
location="{{location}}"
http_user=admin
http_password="{{azure_spark_cluster_http_password}}"
ssh_user=deployer
ssh_public_key="{{ssh_public_key_deployer}}"
storage_account_name="{{sunbird_private_storage_account_name}}"
storage_account_key="{{sunbird_private_storage_account_key}}"
storage_container=spark-test
subnet_name="{{subnet_name}}"
vnet_name="{{vnet_name}}"
version=4.0
workernode_count="{{workernode_count}}"
workernode_size="{{workernode_size}}"

az login
az account set --subscription "{{subscription_id}}"

az hdinsight create --name $cluster_name --resource-group $resource_group --type $cluster_type --cluster-tier Standard --component-version Spark=$component_version --headnode-size $headnode_size --location $location --http-password $http_password --http-user $http_user --ssh-user $ssh_user --ssh-public-key "$ssh_public_key" --storage-account $storage_account_name --storage-account-key $storage_account_key --storage-container $storage_container --subnet $subnet_name --vnet-name $vnet_name --version $version --workernode-count $workernode_count --workernode-size $workernode_size --tags Name=$cluster_name


mapfile -t nic_array < <( az network nic list -g $resource_group -o table | grep 'headnode\|workernode' | awk '{print $5}' )

for nic in "${nic_array[@]}";
do
  tag_name=$(az network nic show -n  $nic -g $resource_group | grep "$cluster_name" | cut -d':' -f2 | tr -d '"' | tr -d ' ')
  if [ "$tag_name" == "$cluster_name" ]; then
      private_ip=$(az network nic show -n $nic -g $resource_group | grep '"privateIpAddress":' | cut -d':' -f 2 | cut -d ',' -f1  | tr -d '"' | tr -d ' ')
      name=$(echo $nic | cut -d'-' -f2)
      count=$(echo $nic | cut -d'-' -f3)
      hostname=$name-$count
      echo $hostname : $private_ip
      sed -i '/\['$hostname'\]/{n;s/.*/'$private_ip'/}' "{{inventory_dir}}/hosts"
  fi
done
