---
#- name: Update apt cache
#  apt: update_cache=yes cache_valid_time={{apt_cache_timeout}}

#- name: Apt install required system packages.
#  apt: pkg={{item}} state=present
#  with_items:
#    - zookeeper
#    - zookeeperd
- name: download the version {{ zookeeper_version }} zookeeper tar file
  become: yes
  become_user: "{{ zookeeper_user }}"
  get_url: url={{ zookeeper_url }} dest={{ zookeeper_dir }}/zookeeper-{{ zookeeper_version }}.tar.gz timeout=50 force=no owner={{ zookeeper_user }}

- name: unzip
  become: yes
  become_user: "{{ zookeeper_user }}"
  unarchive: src={{ zookeeper_dir }}/zookeeper-{{ zookeeper_version }}.tar.gz dest={{ zookeeper_dir }} copy=no group={{ zookeeper_user }} owner={{ zookeeper_user }} creates={{ zookeeper_dir }}/zookeeper

- name: Change ownership of zookeeper installation
  become: yes
  file: path={{ zookeeper_dir }}/zookeeper owner={{ zookeeper_user }} group={{ zookeeper_user }} state=directory recurse=yes

- name: Registering server_id
  set_fact:
    server_id: "{% for servername in ansible_play_hosts %}{% if inventory_hostname==servername %}{{ loop.index }}{% endif %}{% endfor %}"

- name: Overwrite myid file.
  template: src=myid.j2 dest={{ zookeeper_dir }}/zookeeper/conf/myid
  notify:
    - Restart zookeeper

- name: Overwrite log4j file.
  template: src=log4j.properties.j2 dest={{ zookeeper_dir }}/zookeeper/conf/log4j.properties
  notify:
    - Restart zookeeper

- name: Overwrite env file.
  template: src=environment.j2 dest={{ zookeeper_dir }}/zookeeper/conf/environment
  notify:
    - Restart zookeeper

- name: Overwrite default config file
  template: src=zoo.cfg.j2 dest={{ zookeeper_dir }}/zookeeper/conf/zoo.cfg
  notify:
    - Restart zookeeper

- name: create systemd config
  template: dest={{zookeeper_systemd_service}} owner=root group=root mode=644 src=zookeeper.service.j2
  notify:
    - restart zookeeper

- name: just force systemd to reread configs
  systemd: daemon_reload=yes

- name: Enable and Start zookeeper
  systemd: name=zookeeper state=started enabled=yes
  become: yes

- name: wait for zookeeper port
  wait_for: host={{zookeeper_listen_address| default('localhost')}} port={{zookeeper_port}} state=started timeout=30
  when: verify
