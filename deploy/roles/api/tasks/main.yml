---
- include_vars: "../../../secrets/{{env}}.yml"

- name: Install openjre
  apt: name=openjdk-7-jre-headless state=present
  sudo: yes

- name: Install git
  apt: name=git state=present
  sudo: yes

- name: Install logrotate
  apt: name=logrotate state=present
  sudo: yes

- name: check if golang file has been downloaded
  stat: path=/usr/local/{{ go_tar_file }}
  register: st

- name: Get golang binary
  get_url: url={{ golang_url }} dest=/usr/local
  sudo: yes
  when: st.stat.exists == False

- name: untar file
  unarchive: src=/usr/local/{{ go_tar_file }} dest=/usr/local copy=no
  sudo: yes
  when: st.stat.exists == False

- name: Add golang to PATH
  lineinfile: dest=/etc/profile regexp="export PATH=$PATH:/usr/local/go/bin" insertafter=EOF line="export PATH=$PATH:/usr/local/go/bin"
  sudo: yes

- name: create go path folder
  file: path=/home/{{ user }}/go state=directory

- name: Add GOPATH
  lineinfile: dest=/home/{{ user }}/.bashrc regexp="export GOPATH=$HOME/go" line="export GOPATH=$HOME/go" insertafter=EOF

- name: Copy ecosystem_file
  copy: src=Ecosystem-Platform-API dest=/usr/bin mode=755
  sudo: yes
  notify:
  - restart ecosystem-api

- name: Copy ecosystem init file
  template: src=ecosystem-api.sh dest=/etc/init.d/ecosystem-api mode=755
  sudo: yes
  notify:
  - restart ecosystem-api

- name: Create telemetry log directory
  file: path=/var/log/telemetry state=directory mode="u=rwx,g=rx,o=rx"
  sudo: yes

- name: Start Ecosystem-Platform-API
  service: name=ecosystem-api state=started enabled=yes
  sudo: yes

- name: Change logfile permission
  file: path=/var/log/telemetry/telemetry.log state=touch mode=0644
  sudo: yes

- name: Install nginx
  apt: name=nginx state=present
  sudo: yes

- name: Copy api conf
  template: src=api.conf dest=/etc/nginx/sites-available/default
  sudo: yes

- name: Restart nginx
  service: name=nginx state=restarted
  sudo: yes

- name: Copy logrotate file
  copy: src=telemetry.logrotate dest=/etc/logrotate.d/telemetry mode=0644
  sudo: yes

- name: Cron job for logrotate
  cron: name="telemetry logrotate" minute=30 hour=2
        user="root" job="logrotate /etc/logrotate.d/telemetry > /dev/null"
  sudo: yes

- name: Restart Ecosystem-Platform-API
  service: name=ecosystem-api state=restarted
  sudo: yes